// <auto-generated />
using System;
using BookMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookMS.Migrations
{
    [DbContext(typeof(AppDbContent))]
    partial class AppDbContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("BookMS.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "admin",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("BookMS.Models.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Press")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = "978-7-302-34695-1",
                            Author = "尹为民",
                            Name = "数据库原理与技术",
                            Number = 20,
                            Press = "清华大学出版社"
                        },
                        new
                        {
                            Id = "978-7-111-50482-5",
                            Author = "David A. Patterson",
                            Name = "计算机组成与设计",
                            Number = 10,
                            Press = "机械工业出版社"
                        });
                });

            modelBuilder.Entity("BookMS.Models.Lend", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bid")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("LendTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.HasKey("No");

                    b.HasIndex("Bid");

                    b.HasIndex("Uid");

                    b.ToTable("Lends");
                });

            modelBuilder.Entity("BookMS.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Major")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("Question_answer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Question_id")
                        .HasColumnType("int");

                    b.Property<bool>("Sex")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("Question_id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "wzy",
                            Major = "计算机科学与技术",
                            Name = "万兆奕",
                            Password = "wzy",
                            Question_answer = "野兽仙贝",
                            Question_id = 1,
                            Sex = true
                        },
                        new
                        {
                            Id = "shr",
                            Major = "计科",
                            Name = "宋昊睿",
                            Password = "shr",
                            Question_answer = "红色",
                            Question_id = 3,
                            Sex = true
                        },
                        new
                        {
                            Id = "murasame",
                            Major = "冷兵器护理",
                            Name = "丛雨",
                            Password = "goshujin",
                            Question_answer = "有地将臣",
                            Question_id = 2,
                            Sex = false
                        });
                });

            modelBuilder.Entity("BookMS.Models.VerifyQuestion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("VerifyQuesions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Question = "你最喜欢的食物是什么？"
                        },
                        new
                        {
                            ID = 2,
                            Question = "你的第一任老师是谁？"
                        },
                        new
                        {
                            ID = 3,
                            Question = "你最喜欢的颜色是什么？"
                        },
                        new
                        {
                            ID = 4,
                            Question = "你养的第一个宠物名字叫什么？"
                        },
                        new
                        {
                            ID = 5,
                            Question = "你的第一个同桌是谁？"
                        });
                });

            modelBuilder.Entity("BookMS.Models.Lend", b =>
                {
                    b.HasOne("BookMS.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("Bid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookMS.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Uid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BookMS.Models.User", b =>
                {
                    b.HasOne("BookMS.Models.VerifyQuestion", "Question")
                        .WithMany()
                        .HasForeignKey("Question_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
